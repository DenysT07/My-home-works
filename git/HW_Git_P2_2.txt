JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер. - git clone https://github.com/DenysT07/JSON.git
 6. Внутри локального JSON создать файл “new.json”. touch new.json
 7. Добавить файл под гит. - git add.
 8. Закоммитить файл. - git commit -m "json file"
 9. Отправить файл на внешний GitHub репозиторий. - git pushcat
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 cat >> new.json 
 { "Full name":"Terpylo Denys Alexsandrovich",
"age":"25"
"pets":"1 cat"
"expected salary":"500$"
}
 11. Отправить изменения на внешний репозиторий. - git add . ; git commit -m "add information"; git push 
 12. Создать файл preferences.json - touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 cat >> preferences.json
 {"Favorite movie":"Fight club"
"Favorite serial":"Walking dead"
"Favorite food":"shaurma"
"Favorite season":"summer"
"Coutry I`d like to visit":"Germany"
}
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 cat >> sklls.json
{"skills that I will learn on this cours":["Git Bash","Git Hub","Postman","trafik snifers","and a lot of ather things!"]
}
 15. Отправить сразу 2 файла на внешний репозиторий. git add . ; git commit -m "add two files together"; git push 
 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON - git pull
