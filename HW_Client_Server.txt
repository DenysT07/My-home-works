HW
Client_Server
1) Прочиать про клиент-серверную архитектуру
2) Что такое HTTP и HTTPS - протоколы передачи данных в виде текста, это два одинаковых протокола шифрованият с разницей в том что HTTPS имеет надстройку в виде шифрования данных с помошью протоколов SSL TLS. Используют порты 80 и 443 соответственно.
3) HTTP методы - GET - запрос данных; POST - добавление данных; PUT - изменение данных; PATCH - Частичное изменение данных; DELETE - удаление данных; OPTIONS - через этот метод можно узнать какие методы поддерживает сервер, и другие поддерживаемые функции;  
4) HTTP статус коды сервера - 
100е - информационные;
200е - успех операции, 201 - Created (создано), 202 - Accepted(принято в обработку);
300е - перенаправление, 301 - Moved Permanently(полностью перенесено на другой URl) , 302 - Found (yайдено по другому URL или временно перенесена)
400е - ошибка на стороне клиента, 401 - Unauthorized (пользователь не авторизован), 403 - Forbidden (у пользователя нет прав), 404 - Not Found (страница не найдена или была удалена), 405 - Method Not Allowed (метот которым был сделан запрос не поддерживается сервером), 408 - Request Timeout (запрос к серверу длился слишком много времени)  ;
500е - ошибка на стороне сервера, 501 - Not Implemented	(сервер не может распознать метод которым был сделан запрос), 503 - Service Unavailable (сервер не работает в данный момент), 505 - HTTP Version Not Supported (не поддерживается версия HTTP)
5) Что такое ядро браузера - ядро браузера это код который расшифровывает текст форматов HTML, CSS, XML, JSON в понятный текст, видео, картинки и другие виды информации, а также выступает в роли клиента и позволяет срабатывать скриптам которые отправлют запросы на сервер.
6) Какие браузеры какиие ядра используют - Blink (Google chrome, Opera), Gecko (fireFox), WebKit (Safari)
7) Что такое API - API это интерфейс с помошью которого одна программа/сервер может расшифровать и испльзовать данные которые поступают с другой программы/сервера.
8. Что такое ендпоинты - это конечная точка маршрута по которому обращается клиент при помощи request, для получения ответа от сервера. Даже правильно сделанный request, но отправленный в не подходящий эндпоинт не даст ожидаемого результата. 
9) URL (URI, URL, URN)  -  URL - это метод поиска рессурса, который использует путь к этому рессурсу. URN - єто метод поиска рессурса который использует только уникальное имя искомого рессурса. URI - это комбинация идентификации рессурса при помоши имени и конкретного адресса.  
10) Идемпотентные HTTP методы - это методы HTTP запросов ответы на которые всегда будут одинаковые начиная со второго. К ним отностся GET, Delete, Put.
11) Безопасные HTTP методы - это методы которые не вносят изменения в сервере и не могут ничему навредить.  
12) Иденфикация, Аутентификация, Авторизация -  Иденфикация это обращение сервера к базе данных бля установления наличия инормации о нем используя идентификатор например почта или ниенейм. Аутентификация - это установления орегинальности конкретного пользователя используя аутентификатор такой как пароль, биометрия, СМС, звонок, Авторизация - это предоставления прав пользователю соответственно тем которые прописаны в БД после Иденфикации и Аутентификация.
13) Что такое IP - это адрес конкретной машины в интернете, он всегда уникальный
14) Что такое октаты в DNS - это одна из 5и цифр которая находится в IP адрессе, которая в свою очередь состоит из бинарного кода который преобразован из 8и значного значения в число от 0 до 255. DNS это система которая присваивает читаемые имена для IP адрессов.
15) Что такое порт, сколько портов у Linux сервера - порт это идентификатор конкретного рессурса по одному и томуже IP адрессу, поскольку на одном адрессе может находится сразу неснолько отдельных рессурсов. портов может существовать 65536 это 2 в 16й степени.
16) Уровни OSI - 
1.Физический уровень - физическая передача сигнала такая как радио, оптоволокно, електричество.
2.Канальный уровень - преобразование физического сигнала в биты и служебная информация об отправителе и получателе в одной сети.
3.Сетевой уровень - передача данный между разными сетями
4.Транспортный уровень - тип передачи данных TSP и UDP, TSP ждет ответа от получателя и если эго нет то отправляет еще раз, UDP потоковая передача данных без ожидания подтверждения от получателя.
5.Сеансовый уровень - контроль над сеансами связи двух или более сторон, начало сеанса, подержание сеанса, прерывание сансов. 
6.Представительский уровень - шифровка данный в формат которы можно передавать по сети.
7.Прикладной уровень - уровень предачи данных в сети интернет используя протоколы по типу HTTP
17) Хедеры http запросов - в хедерах запроса отправляется информация о клиенте, эго браузере, типе шифрования, язык, время, состояние кэша.